"swagger": "2.0",
"info":{
    "description": "This is a sample app to learn APIs",
    "version": "1.0.0",
    "title": "has Eriq fed the cat app"
}

"basePath": "/",
"consumes": ["application/json"],
"produces": ["application/json"],
"schemes": ["http", "https"],
"tags":[{
    "name": "Has Eriq fed the cat app",
    "description": "a simple app to explore APIs"
}],

"paths": {
  "/cats": {
    "post": {
        "tags": ["Cats"],
    
    "summary": "Add a new cat in the database",

    "parameters": [{
        "name": "PostCatRequest",
        "in": "body",
        "description": "post a cat to the database",

        "schema": {
            "type": "object",
            "required": [
                "name",
                "breed",
                "markings"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "breed": {
                    "type": "string"
                },
                "markings": {
                    "type": "string"
                }
            }

        }
    }],
        "responses": {
            "201": {
                "description": "cat successfully created",
                "schema": {
                    "type": "object",
                    "$ref": "#/definitions/CatObject"
                }
            }
        },
        "produces": ["application/json"]

      


    }
    
  }
}
    


    
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify cats in your account"
      read:pets: "read your cats"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      petId:
        type: "integer"
        format: "int64"
      quantity:
        type: "integer"
        format: "int32"
      shipDate:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        description: "Order Status"
        enum:
        - "placed"
        - "approved"
        - "delivered"
      complete:
        type: "boolean"
        default: false
    xml:
      name: "Order"
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Category"
  
    xml:
      name: "User"
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Tag"
  Pet:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      category:
        $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "doggie"
      photoUrls:
        type: "array"
        xml:
          name: "photoUrl"
          wrapped: true
        items:
          type: "string"
      tags:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/Tag"
      status:
        type: "string"
        description: "pet status in the store"
        enum:
        - "available"
        - "pending"
        - "sold"
    xml:
      name: "Pet"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"